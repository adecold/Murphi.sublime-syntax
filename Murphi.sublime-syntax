%YAML 1.2
---
name: Murphi
file_extensions: [m]
scope: source.murphi

contexts:
  main:

    # Comments
    - include: comment
    - match: '\/\*'
      captures:
        0: punctuation.definition.comment.murphi
      push:
        - meta_scope: comment.block.murphi
        - match: '\*\/'
          pop: true

    # Errors
    # Double equal sign is a common error: use one equal sign for equality testing.
    - match: ==[^>]
      scope: invalid.illegal.murphi
    # Double && and || are errors.
    - match: \&\&|\|\|
      scope: invalid.illegal.murphi

    # Functions
    - match: \b(?i)(?:ismember|isundefined|multisetadd|multisetcount|multisetremove|multisetremovepred)\b
      scope: entity.name.Function.murphi
    # Labels
    - match: \b(?i)(?:case|const|invariant|rule|ruleset|startstate|type|var)\b
      scope: entity.name.tag.murphi

    # Repeats
    - match: \b(?i)(?:do|endexists|endfor|endforall|endwhile|exists|for|forall|to|while)\b
      scope: keyword.control.murphi
    # Conditionals
    - match: \b(?i)(?:else|elsif|endif|endswitc|if|switch|then)\b
      scope: keyword.operator.murphi
    # Keywords
    - match: \b(?i)(?:alias|assert|begin|by|clear|end|endalias|endfunction|endprocedure|endrule|endruleset|endstartstate|error|function|in|interleaved|log|procedure|process|program|put|return|traceuntil|undefine)\b
      scope: keyword.control.murphi

    # Structures
    - match: \b(?i)(?:array|endrecord|enum|of|record|union)\b
      scope: storage.modifier.murphi
    # Boolean
    - match: \b(?i)(?:boolean|multiset|scalarset)\b
      scope: storage.type.murphi
    # Boolean
    - match: \b(?i)(?:false|true)\b
      scope: constant.language.murphi
    # Integers
    - match: '\b([1-9]+[0-9]*|0)'
      scope: constant.numeric.murphi
    # Operators
    - match: \?|\:|->|\||\&|\!|\<|<\=|\=|\!\=|\>\=|\>|\+|\-|\*|\/|\%
      scope: keyword.operator.murphi

    # Strings
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.murphi
      push:
        - meta_scope: string.quoted.double.murphi
        - match: '"'
          captures:
            0: punctuation.definition.string.end.murphi
          pop: true

  comment:
    - match: '(?<=^| )(--).*$'
      scope: comment.line.double-dash.murphi
      captures:
        1: punctuation.definition.comment.murphi

